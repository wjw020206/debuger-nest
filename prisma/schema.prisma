// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 用户表
model User {
  id                Int        @id @default(autoincrement())
  nickname          String
  email             String
  avatar            String?
  gender            String?
  password          String
  // 创建日期
  createAt          DateTime   @default(now())
  // 更新日期
  updateAt          DateTime   @updatedAt
  // 问题
  Question          Question[]
  // 个人简介
  introduction      String?
  // 个人网站
  website           String?
  birthday          DateTime?
  Answer            Answer[]
  Reply             Reply[]
  Comment           Comment[]
  // 关注的标签
  favoriteTags      Tag[]
  favoriteQuestions Question[] @relation("FavoriteQuestions")
}

// 问题表
model Question {
  id          Int       @id @default(autoincrement())
  // 问题标题
  title       String
  // 问题详情
  content     String    @db.Text
  // 创建日期
  createAt    DateTime  @default(now())
  // 更新日期
  updateAt    DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  vote        Int       @default(0)
  answerCount Int       @default(0)
  read        Int       @default(0)
  Answer      Answer[]
  Comment     Comment[]
  tags        Tag[]
  favoritedBy User[]    @relation("FavoriteQuestions")
}

// 回答表
model Answer {
  id         Int       @id @default(autoincrement())
  content    String
  // 创建日期
  createAt   DateTime  @default(now())
  // 更新日期
  updateAt   DateTime  @updatedAt
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  question   Question  @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId Int
  vote       Int       @default(0)
  Comment    Comment[]
}

// 评论表
model Comment {
  id         Int      @id @default(autoincrement())
  content    String
  // 创建日期
  createAt   DateTime @default(now())
  // 更新日期
  updateAt   DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  Answer     Answer   @relation(fields: [answerId], references: [id], onDelete: Cascade)
  answerId   Int
  question   Question @relation(fields: [questionId], references: [id])
  questionId Int
  Reply      Reply[]
}

// 回复表
model Reply {
  id        Int      @id @default(autoincrement())
  content   String
  // 创建日期
  createAt  DateTime @default(now())
  // 更新日期
  updateAt  DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  comment   Comment  @relation(fields: [commentId], references: [id])
  commentId Int
}

// 标签表
model Tag {
  id        Int        @id @default(autoincrement())
  title     String     @unique
  content   String
  questions Question[]
  users     User[]
}
